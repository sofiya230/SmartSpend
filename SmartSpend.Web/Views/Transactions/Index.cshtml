@*
 *
 * TRANSACTIONS INDEX
 *
*@

@model SmartSpend.AspNet.Controllers.TransactionsIndexPresenter
@inject Common.DotNet.IClock clock;
@{
    ViewData["Title"] = "Transactions";

    var prevDisabled = Model.PageInfo.Page == 1 ? "disabled" : "";
    var nextDisabled = Model.PageInfo.Page == Model.PageInfo.TotalPages ? "disabled" : "";
}

@*
    PAGE-SPECIFIC SCRIPTS
*@

@section scripts {
    <script type="text/javascript">
        function dropHandler(ev) {
        }

        function dragOverHandler(ev) {
            console.log('File(s) in drop zone');

            // Prevent default behavior (Prevent file from being opened)
            ev.preventDefault();
        }
    </script>
}

@*
    ANTI-FORGERY
*@

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<input type="hidden" id="xsrf"
       name="xsrf" value="@GetAntiXsrfRequestToken()">

@*
    PAGE NAVBAR
*@

<nav class="navbar navbar-light navbar-page mb-2">
    <div class="container-fluid">
        <span class="navbar-brand h1 mt-1">@ViewData["Title"]</span>
        <form class="d-flex my-1" asp-action="Index" asp-route-v="@Model.Parameters.View" asp-route-o="@Model.Parameters.Order" method="post">
            <input class="form-control me-1 category-autocomplete input-lg" type="search" data-test-id="q" placeholder="Search" aria-label="Search" name="q" value="@Model.Parameters.Query" autocomplete="off">
            <button type="submit" class="btn btn-secondary me-1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Search" data-test-id="btn-search">
                <i class="fas fa-search"></i>
            </button>
            <div data-bs-toggle="tooltip" data-bs-placement="bottom" title="Help">
                <a href="#" data-bs-toggle="modal" data-bs-target="#searchHelpModal" class="btn btn-outline-secondary me-1" data-test-id="btn-help"><i class="fas fa-question"></i></a>
            </div>
            <a asp-action="Index" asp-route-o="@Model.Parameters.Order" asp-route-v="@Model.Parameters.View" class="btn btn-outline-secondary me-1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Clear" data-test-id="btn-clear"><i class="fas fa-times"></i></a>
            <div class="nav-item dropstart" data-tooltip="tooltip" data-bs-placement="bottom" title="Actions">
                <button class="btn btn-secondary dropdown-toggle dropdown-noarrow" id="dropdownMenuButtonAction" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-h"></i>
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButtonAction">
                    <a asp-action="Create" class="btn">Create New</a>
                    <a asp-action="Index" class="btn"
                       asp-route-o="@Model.Parameters.Order"
                       asp-route-p="@Model.Parameters.Page"
                       asp-route-q="@Model.Parameters.Query"
                       asp-route-v="@Model.ToggleHidden">
                        @(Model.ShowHidden?"Hide Hidden":"Show Hidden")
                    </a>
                    <a asp-action="Index" class="btn"
                       asp-route-o="@Model.Parameters.Order"
                       asp-route-p="@Model.Parameters.Page"
                       asp-route-q="@Model.Parameters.Query"
                       asp-route-v="@Model.ToggleSelected">
                        @(Model.ShowSelected?"Cancel Bulk Edit":"Bulk Edit")
                    </a>
                    <a asp-controller="Receipts" asp-action="Index" class="btn">
                        Match Receipts
                    </a>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#exportHowModal" class="btn">Export</a>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#helpModal" class="btn">Help Topic</a>
                </div>
            </div>
        </form>
    </div>
</nav>


@if (Model.ShowSelected)
{
    <div>
        <form asp-action="BulkEdit" asp-route-o="@Model.Parameters.Order" method="post">
            <div class="form-actions">
                <div class="row">
                        <div class="col-5 col-md-3 col-lg-2">
                            <p class="fs-6 mt-2">Set Category To:</p>
                        </div>
                        <div class="col-7 col-md-6 col-lg-8">
                            <input type="text" name="Category" class="category-autocomplete w-100 fs-6 mt-2 mb-1" autocomplete="off" />
                        </div>
                        <div class="col-12 col-md-3 col-lg-2">
                            <div class="d-flex w-100">
                                <input type="submit" value="OK" class="btn btn-primary mt-1 mb-1 ms-auto" />
                                <a asp-action="Index" asp-route-o="@Model.Parameters.Order" asp-route-q="@Model.Parameters.Query" asp-route-v="@Model.ToggleSelected" class="btn btn-outline-secondary mt-1 mb-1 ms-1">Cancel</a>
                            </div>
                        </div>
                </div>
            </div>
        </form>
    </div>
}

@if (0 == Model.PageInfo.TotalItems)
{
    if (string.IsNullOrEmpty(Model.Parameters.Query))
    {
        <h4 class="mb-3 mt-1">Your database is empty</h4>

        <p>Please visit the Import page to add your data.</p>

        <p><a class="btn btn-primary" asp-page="/Import">Import &raquo;</a></p>

        <p>Or visit the Admin page to inject some sample data.</p>

        <p><a class="btn btn-primary" asp-page="/Admin" data-test-id="btn-admin">Admin &raquo;</a></p>
    }
    else
    {
        <h4 class="mt-1">No items found</h4>
    }
}
else
{
    var line = 0;
    var selectedcols = (Model.ShowSelected) ? 1 : 0;

    <table class="table table-index mt-1" data-test-id="results">
        <thead>
            <tr class="row">

                @if (Model.ShowSelected)
                {
                    <th class="col-1 col-lg-1" data-test-id="select">✓</th>
                }

                <th class="col-@(3-selectedcols) col-lg-2" data-test-id="Date" style="text-align:right">
                    <span>Date</span><span class="d-none d-@(Model.ShowSelected?"md":"sm")-inline d-lg-none">/Amount</span>
                </th>
                <th class="col-9 col-lg-@(4-selectedcols)" data-test-id="Payee">
                    <span>@nameof(Transaction.Payee)</span><span class="d-lg-none">/Category</span><span>/Memo</span>
                </th>
                <th class="d-none d-lg-block col-lg-2" style="text-align:right">
                    @nameof(Transaction.Amount)
                </th>
                <th class="d-none d-lg-block col-lg-3">
                    @nameof(Transaction.Category)
                </th>
                <th class="d-none" data-test-id="Spacer">
                </th>
                <th class="d-none" data-test-id="Memo">
                </th>
                <th class="d-none" data-test-id="Receipt">
                </th>
                @if (Model.ShowHidden)
                {
                    <th class="d-none" data-test-id=hide>
                        <a asp-action="Index" asp-route-q="@Model.Parameters.Query" asp-route-v="@Model.Parameters.View" asp-route-o="@Model.NextBankReferenceOrder">@nameof(Transaction.BankReference)</a>
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                ++line;
                var hascheckboxes = Model.ShowHidden || Model.ShowSelected;
                var hasmemo = !string.IsNullOrEmpty(item.Memo);
                var hasreceipt = !string.IsNullOrEmpty(item.ReceiptUrl);

                <tr class="txdrop row" data-id="@item.ID" ondragover="dragOverHandler(event);" data-test-id="line-@line">

                    @if (Model.ShowSelected)
                    {
                        var checkedornot = (item.Selected == true) ? "checked" : string.Empty;
                        <td class="col-1 col-lg-1">
                            <input type="checkbox" class="checkbox-post" @checkedornot data-endpoint="/ajax/tx/Select/@item.ID" data-test-id="check-select">
                        </td>
                    }

                    <td class="col-@(3-selectedcols) col-lg-2" style="text-align:right">
                        @if (item.Timestamp.Year == clock.Now.Year)
                        {
                            @item.Timestamp.ToString("M/dd")                            
                        }
                        else
                        {
                            @item.Timestamp.ToString("M/dd/yy")
                        }
                    </td>
                    <td class="col-9 col-lg-@(4-selectedcols) display-payee">
                        @Html.DisplayFor(modelItem => item.Payee)
                    </td>
                    <td class="col-3 col-lg-2" style="text-align:right">
                        @Html.DisplayFor(modelItem => item.Amount)
                    </td>
                    <td class="col-@(hasmemo?9:7) col-lg-3 display-category">
                        @if (item.HasSplits)
                        {
                            <span>SPLIT</span>
                        }
                        else
                        {
                             @item.Category?.Replace(":",": ")
                        }
                    </td>
                    @if (hasmemo)
                    {
                        <td class="col-3 col-lg-@(2+selectedcols)"/>
                        <td class="col-7 col-lg-@(9-selectedcols) display-memo" data-test-id="memo">
                            @Html.DisplayFor(modelItem => item.Memo)
                        </td>
                    }
                    else
                    {
                        <td class="d-none"/>
                        <td class="d-none" data-test-id="memo"/>
                    }
                    <td class="col-2 col-lg-1" style="text-align:right" data-test-value="@hasreceipt">
                        <div class="dropdown">
                            <button href="#" class="btn btn-sm btn-outline-secondary my-1 dropdown-toggle dropdown-noarrow" id="actions-@line" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <div class="dropdown-menu" aria-labelledby="actions-@line">

                                @if (item.HasSplits)
                                {
                                    <a asp-action="Edit" asp-route-id="@item.ID" target="_blank" data-test-id="edit-splits" class="btn dropdown-item">
                                        <i class="fa fa-edit"></i> Edit
                                    </a>
                                }
                                else
                                {
                                    <a href="#" data-id="@item.ID" data-bs-toggle="modal" data-bs-target="#editModal" data-test-id="edit" class="btn dropdown-item">
                                        <i class="fa fa-edit"></i> Edit
                                    </a>
                                }

                                <a href="#" data-id="@item.ID" data-bs-toggle="modal" data-bs-target="#addPayeeModal" class="btn dropdown-item">
                                    <i class="fa fa-plus"></i> Add Payee
                                </a>

                                <a href="#" class="btn dropdown-item apply-link" data-id="@item.ID" data-test-id="apply-payee"><i class="fa fa-paint-brush"></i> Apply Payee</a>

                                <a asp-action="Index"
                                   asp-route-o="@Model.Parameters.Order"
                                   asp-route-v="@Model.Parameters.View"
                                   asp-route-q="p=@item.Payee?.Trim()"
                                    class="btn dropdown-item">
                                    <i class="fa fa-search"></i> Search Payee
                                </a>

                                @if (hasreceipt) //(item.HasReceipt) // This is a DTO construct
                                {
                                    <a href="/Transactions/GetReceipt/@item.ID" target="_blank" class="btn dropdown-item" data-test-id="get-receipt"><i class="far fa-file-pdf"></i> Get Receipt</a>
                                }
                                else
                                {
                                    <a href="/Transactions/GetReceipt/@item.ID" style="display:none" target="_blank" class="btn dropdown-item" data-test-id="get-receipt"><i class="fa fa-file-pdf"></i> Get Receipt</a>
                                }

                                <a asp-action="Delete" asp-route-id="@item.ID" data-test-id="delete" class="btn dropdown-item">
                                    <i class="fa fa-trash-alt"></i> Delete
                                </a>
                            </div>
                        </div>
                    </td>
                    @if (Model.ShowHidden)
                    {
                        var checkedornot = (item.Hidden == true) ? "checked" : string.Empty;
                        <td class="col-12">
                            <input type="checkbox" class="checkbox-post" @checkedornot data-endpoint="/ajax/tx/Hide/@item.ID"><span> Hidden</span>
                            @if (!string.IsNullOrEmpty(item.BankReference))
                            {
                                <span> Ref:@Html.DisplayFor(modelItem => item.BankReference)</span>                                   
                            }
                        </td>
                    }

                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("/Views/Shared/_PaginationPartial.cshtml", Model)
}

<div class="actiondialog modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true" data-endpoint="/Transactions/EditModal/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">Cancel</button>
                    <a asp-action="Edit" class="btn btn-secondary asp-route-id btnDismissModal" target="_blank">More</a>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="actiondialog modal fade" id="addPayeeModal" tabindex="-1" role="dialog" aria-labelledby="addPayeeModalLabel" aria-hidden="true" data-endpoint="/Payees/CreateModal/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="actiondialog modal fade" id="exportHowModal" tabindex="-1" role="dialog" aria-labelledby="exportHowModalLabel" aria-hidden="true" data-endpoint="/Transactions/DownloadPartial/">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" action="/Transactions/Download">
                <input type="hidden" name="q" value="@Model.Parameters.Query">
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" data-test-id="btn-dl-cancel">Cancel</button>
                    <button type="submit" class="btn btn-primary" data-test-id="btn-dl-save">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="searchHelpModal" tabindex="-1" role="dialog" aria-labelledby="searchHelpModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form>
                <div class="modal-body">
                    <h2 data-test-id="help-title">How to search for transactions</h2>
                    <ul>
                        <li>Type any text to search in category, payee, or memo</li>
                        <li>C={text} to search for {text} only in category</li>
                        <li>C=[blank] to search for items with empty category</li>
                        <li>P={text} to search for {text} only in payee</li>
                        <li>M={text} to search for {text} only in memo</li>
                        <li>A={number} to search for amounts of {number} dollars or cents</li>
                        <li>D={mm/dd} to search for items on mm/dd or up to a week later</li>
                        <li>R=1 or R=0 to include only items with (or without) a receipt</li>
                        <li>Y={year} to include only items in {year}</li>
                        <li>Y=* to include only items from all years, otherwise only shows last 12 months</li>
                        <li>Separate multiple search terms with commas, e.g. "C=[blank],Y=2021"</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@await Html.PartialAsync("/Views/Shared/_HelpDialogPartial.cshtml", "trans")
