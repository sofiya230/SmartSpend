@model SmartSpend.Core.Reports.IDisplayReport
@using System.Text.RegularExpressions;

@{
    var datatestid = $"report-{Model.Definition ?? Regex.Replace(Model.Name, "[^\\w]+", "-")}";

    // Which columns should be rendered on small screens?
    var smallcols = Model.ColumnLabelsFiltered.OrderBy(x => x.Priority).Take(2).ToHashSet();

    // Which columns should be rendered ONLY on medium screens?
    var medcols = Model.ColumnLabelsFiltered.OrderBy(x => x.Priority).Take(3).ToHashSet();
    medcols.ExceptWith(smallcols);

    // Class moniker for columns which are only shown on large screens
    var lgcolclass = "d-none d-lg-table-cell";

    // Class moniker for columns which are only shown on medium screens
    var mdcolclass = "d-none d-md-table-cell";
}
<table class="table report" data-test-id="@datatestid">
    <thead>
        <tr>
        <tr class="report-header">
            <th>@Model.Name</th>
            @foreach (var column in Model.ColumnLabelsFiltered)
            {
                var displaystatus = (smallcols.Contains(column) ? string.Empty : ( medcols.Contains(column) ? mdcolclass : lgcolclass ));
                var coltestid = (!string.IsNullOrEmpty(column.UniqueID)) ? $"data-test-id=col-{column.UniqueID}" : string.Empty;
                <th class="report-col-amount @displaystatus" @coltestid>
                    @(column.IsTotal ? "$ Total" : column.Name)
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var row in Model.RowLabelsOrdered)
        {
            var rowformat = row.IsTotal ? "report-row-total" : $"report-row-{row.Level + Model.DisplayLevelAdjustment}";
            var rowid = Regex.Replace(row.UniqueID, "[^\\w]+", "-");
            var rowtestid = (!string.IsNullOrEmpty(rowid)) ? $"data-test-id=row-{rowid}" : string.Empty;
            <tr class="@rowformat" @rowtestid>

                <td class="report-col-name">
                    @{
                        var name = row.Name;
                        if (row.IsTotal)
                        {
                            name = "Total";

                        }
                        if (name == null)
                        {
                            name = "-";
                        }
                    }
                    @name
                </td>

                @foreach (var column in Model.ColumnLabelsFiltered)
                {
                    var cell = Model[column, row];

                    var colformat = "report-col-amount" + (column.IsTotal ? " report-col-total" : string.Empty);

                    var cellformat = column.DisplayAsPercent ? "P0" : "C0";

                    var testid = (row.IsTotal && !string.IsNullOrEmpty(column.UniqueID)) ? $"data-test-id=total-{column.UniqueID}" : string.Empty;

                    var displaystatus = (smallcols.Contains(column) ? string.Empty : ( medcols.Contains(column) ? mdcolclass : lgcolclass ));

                    <td class="@colformat @displaystatus" @testid>
                        @cell.ToString(cellformat)
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
