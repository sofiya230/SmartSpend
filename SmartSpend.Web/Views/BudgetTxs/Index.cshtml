@*
 *
 * BUDGET-TX INDEX
 *
*@

@model SmartSpend.Core.Repositories.Wire.IWireQueryResult<SmartSpend.Core.Models.BudgetTx>
@inject Common.DotNet.IClock clock;
@{
    ViewData["Title"] = "Budget Line Items";
    var showselected = (bool)(ViewData["ShowSelected"]);
    int selectedcols = showselected ? 1 : 0;
}

@*
    ANTI-FORGERY
*@

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken()
    {
        return Xsrf.GetAndStoreTokens(Context).RequestToken;
    }
}

<input type="hidden" id="xsrf"
       name="xsrf" value="@GetAntiXsrfRequestToken()">

@*
    PAGE NAVBAR
*@

<nav class="navbar navbar-light navbar-page mb-2">
    <div class="container">
        <span class="navbar-brand mt-1 h1">@ViewData["Title"]</span>
        <form class="d-flex my-1" asp-route-v="@Model.Parameters.View" asp-route-o="@Model.Parameters.Order" method="post">
            <input class="form-control me-1 category-autocomplete input-lg" type="search" placeholder="Search" aria-label="Search" name="q" data-test-id="q" value="@Model.Parameters.Query" autocomplete="off">
            <button type="submit" class="btn btn-secondary me-1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Search" data-test-id="btn-search">
                <i class="fas fa-search"></i>
            </button>
            <a asp-route-o="@Model.Parameters.Order" asp-route-v="@Model.Parameters.View" class="btn btn-outline-secondary me-1" data-bs-toggle="tooltip" data-bs-placement="bottom" title="Clear" data-test-id="btn-clear"><i class="fas fa-times"></i></a>
            <div class="nav-item dropstart" data-tooltip="tooltip" data-bs-placement="bottom" title="Actions">
                <button class="btn btn-secondary dropdown-toggle dropdown-noarrow" id="dropdownMenuButtonAction" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="fas fa-ellipsis-h"></i>
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButtonAction">
                    <a asp-action="Create" class="btn">Create New</a>
                    <a asp-action="Index" class="btn"
                       asp-route-q="@Model.Parameters.Query"
                       asp-route-v="@ViewData["ToggleSelected"]">
                        @((bool)(ViewData["ShowSelected"])?"Cancel Bulk Edit":"Bulk Edit")
                    </a>
                    <a asp-action="Download" class="btn">Export</a>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#helpModal" class="btn">Help Topic</a>
                </div>
            </div>
        </form>
    </div>
</nav>

@*
    BULK OPERATIONS TASKBAR
*@

@if (showselected)
{
    <div class="form-actions d-flex">
        <p class="me-2 fs-6 mt-auto mb-auto">Bulk edit operations:</p>
        <a href="#" data-bs-toggle="modal" data-bs-target="#deleteConfirmModal" class="btn btn-outline-secondary mt-1 mb-1" data-test-id="btn-bulk-delete">Delete</a>
    </div>
}

@*
    WARNING: EMPTY!
*@

@if (0 == Model.PageInfo.TotalItems)
{
    if (string.IsNullOrEmpty(Model.Parameters.Query))
    {
        <h4 class="mb-3">Your database is empty</h4>

        <p>You can visit the Admin page to inject some sample data.</p>

        <p><a class="btn btn-primary" asp-page="/Admin">Admin &raquo;</a></p>

        <h4>Importer</h4>

        <p>Or you can import items here:</p>
    }
    else
    {
        <h4>No items found</h4>
    }
}

@*
    RESULTS TABLE
*@

else
{
    var line = 0;

    <table class="table table-index" data-test-id="results">
        <thead>
            <tr class="row">
                @if ((bool)(ViewData["ShowSelected"]))
                {
                    <th class="col-@selectedcols">✓</th>
                }
                <th class="col-3 col-md-2" style="text-align:right">
                    Date<span class="d-none d-sm-inline d-md-none">/Amount</span>
                </th>
                <th class="col-@(9-selectedcols) col-md-@(5-selectedcols)">
                    Category<span class="d-md-none">/Frequency</span><span>/Memo</span>
                </th>
                <th class="d-none d-md-block col-md-2" style="text-align:right">
                    Amount
                </th>
                <th class="d-none d-md-block col-md-2">
                    Frequency
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                ++line;
                var showfreq = item.Frequency > 1;
                var showmemo = item.Memo != null;

                <tr class="row" data-test-id="line-@line">
                    @if ((bool)(ViewData["ShowSelected"]))
                    {
                        <td class="col-@selectedcols">
                            @{ var checkedornot = (item.Selected == true) ? "checked" : string.Empty; }
                            <input type="checkbox" class="checkbox-post" @checkedornot data-endpoint="/ajax/budget/select/@item.ID" data-test-id="check-select">
                        </td>
                    }
                    <td class="col-3 col-md-2" style="text-align:right">
                        @if (item.Timestamp.Year == clock.Now.Year)
                        {
                            @item.Timestamp.ToString("M/dd")                            
                        }
                        else
                        {
                            @item.Timestamp.ToString("M/dd/yy")
                        }
                    </td>
                    <td class="col-@(9-selectedcols) col-md-@(5-selectedcols)">
                        @item.Category.Replace(":",": ")
                    </td>
                    <td class="col-@(3+selectedcols) col-md-2" style="text-align:right">
                        @item.Amount.ToString("C0")
                    </td>
                    @if(showfreq)
                    {
                        <td class="col-@(7-selectedcols) col-md-@(showmemo?3:2)" data-test-id="freq">
                            @item.FrequencyName
                        </td>
                    }
                    else
                    {
                        <td class="d-none d-md-block col-md-@(showmemo?3:2)" data-test-id="freq"/>
                    }
                    @if (!string.IsNullOrEmpty(item.Memo))
                    {
                        if (showfreq)
                        {
                            <td class="col-@(3+selectedcols) col-md-@(2+selectedcols)"/>
                        }
                        else
                        {
                            <td class="d-none d-md-block col-md-@(2+selectedcols)"/>                            
                        }
                        <td class="col-@(7-selectedcols) col-md-@(9-selectedcols)" data-test-id="memo">
                            @Html.DisplayFor(modelItem => item.Memo)
                        </td>
                    }
                    else
                    {
                        if (showfreq)
                        {
                            <td class="d-none" data-test-id="memo"/>                           
                        }
                        else
                        {
                            @* Spacing to move the menu to the right *@
                            <td class="col-@(7-selectedcols) d-md-none" data-test-id="memo"/>
                        }
                    }

                    <td class="col-2 col-md-1" style="text-align:right">
                        <div class="dropdown">
                            <button href="#" class="btn btn-sm btn-outline-secondary my-1 dropdown-toggle dropdown-noarrow" id="actions-@line" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <i class="fas fa-ellipsis-h"></i>
                            </button>
                            <div class="dropdown-menu" aria-labelledby="actions-@line">
                                <a asp-action="Edit" asp-route-id="@item.ID" data-test-id="edit" class="btn dropdown-item">
                                    <i class="fa fa-edit"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.ID" data-test-id="delete" class="btn dropdown-item">
                                    <i class="fa fa-trash-alt"></i> Delete
                                </a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @await Html.PartialAsync("/Views/Shared/_PaginationPartial.cshtml", Model)
}

@*
    UPLOAD FILES CONTROL
*@

<form method="post" enctype="multipart/form-data" asp-controller="BudgetTxs" asp-action="Upload">
    <div class="input-group mb-3 mt-3">
        <button class="btn btn-secondary" type="submit" id="inputGroupFileAddon03" disabled>Upload</button>
        <input type="file" class="form-control" id="inputGroupFile03" aria-describedby="inputGroupFileAddon03" aria-label="Upload" name="files" multiple>
    </div>
</form>

@*
    DELETE CONFIRM DIALOG
*@

<div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form asp-action="BulkDelete">
                <div class="modal-body">
                    <h2 data-test-id="help-title">Are you sure?</h2>
                    <p>These items will be deleted permanantly, with no option to recover them.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" data-bs-dismiss="modal" data-test-id="btn-modal-ok">OK</button>
                </div>
            </form>
        </div>
    </div>
</div>

@*
    HELP DIALOG
*@

@await Html.PartialAsync("/Views/Shared/_HelpDialogPartial.cshtml", "budget")
